apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: prometheus-deployment
  namespace: zcp-system
spec:
  replicas: 1
  selector:
    matchLabels:
      component: prometheus
  template:
    metadata:
      labels:
        component: prometheus
    spec:
      serviceAccountName: zcp-system-admin
      tolerations:
      - key: "management"
        operator: "Equal"
        value: "true"
        effect: "NoSchedule"
      restartPolicy: Always
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - "amd64"
              - key: node-role.kubernetes.io/management
                operator: Exists
      containers:
        - name: prometheus
          image: au.icr.io/cloudzcp/prometheus:v2.16.0
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              cpu: 2000m
              memory: 4Gi
            limits:
              cpu: 2000m
              memory: 4Gi
          args:
            - "--config.file=/etc/config/prometheus.yml"
            - "--storage.tsdb.path=/data"
            - "--storage.tsdb.retention.time=37d"
            - "--web.console.libraries=/etc/prometheus/console_libraries"
            - "--web.console.templates=/etc/prometheus/consoles"
            - "--web.enable-lifecycle"
            - "--web.enable-admin-api"
          ports:
            - containerPort: 9090
              protocol: TCP
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /-/healthy
              port: 9090
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /-/ready
              port: 9090
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
          securityContext:
            runAsUser: 0
          volumeMounts:
            - name: config-volume
              mountPath: /etc/config
            - name: storage-volume
              mountPath: /data
            - name: rules-volume
              mountPath: /etc/prometheus-rules
            - name: zdb-rules-volume
              mountPath: /etc/prometheus-zdb-rules
            - name: user-rules-volume
              mountPath: /etc/prometheus-user-rules
#            - name: etcd-secrets-volume
#              mountPath: /etc/etcd-secrets
#              readOnly: true
      volumes:
        - name: config-volume
          configMap:
            defaultMode: 420
            name: prometheus-config
        - name: storage-volume
          persistentVolumeClaim:
            claimName: prometheus-data
        - name: rules-volume
          configMap:
            defaultMode: 420
            name: prometheus-rules
        - name: zdb-rules-volume
          configMap:
            defaultMode: 420
            name: prometheus-zdb-rules
        - name: user-rules-volume
          configMap:
            defaultMode: 420
            name: prometheus-user-rules
#        - name: etcd-secrets-volume
#          secret:
#            secretName: etcd-secrets
